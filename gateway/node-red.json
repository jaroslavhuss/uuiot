[
  {
      "id": "19b9be357f301b73",
      "type": "tab",
      "label": "Flow 1",
      "disabled": false,
      "info": "",
      "env": []
  },
  {
      "id": "686cb45f8c005168",
      "type": "serial in",
      "z": "19b9be357f301b73",
      "name": "Weather Station",
      "serial": "627510a29e1feb98",
      "x": 160,
      "y": 220,
      "wires": [
          [
              "eca5f3be9021a319",
              "7463c822626b4255"
          ]
      ]
  },
  {
      "id": "eca5f3be9021a319",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "getTemperature()",
      "func": "const parsedMsg = msg.payload.split(\" \");\nconst temperature = parsedMsg[4];\nlet schema = {\n    temperature:parseFloat(temperature),\n    wasSent:false,\n    date:new Date(),\n}\nmsg.payload = schema;\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 370,
      "y": 220,
      "wires": [
          [
              "aae2a57e2b7202a2"
          ]
      ]
  },
  {
      "id": "7463c822626b4255",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "getHumidity()",
      "func": "const parsedMsg = msg.payload.split(\" \");\nconst humidity = parsedMsg[1];\nlet schema = {\n    humidity:parseFloat(humidity), //Protože tady člověk nemůže používat TS.. Do piči\n    wasSent:false,\n    date:new Date(),\n}\nmsg.payload = schema;\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 350,
      "y": 280,
      "wires": [
          [
              "42a9755b0868fa0b"
          ]
      ]
  },
  {
      "id": "e2e9d17b8f2498c6",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "Saves temperature and humidity to the local Mongo DB - each has its own collection",
      "info": "For each there is a collection",
      "x": 370,
      "y": 180,
      "wires": []
  },
  {
      "id": "f9bb71eee7f87a35",
      "type": "inject",
      "z": "19b9be357f301b73",
      "name": "humidityTemperature:Trigger",
      "props": [
          {
              "p": "payload"
          }
      ],
      "repeat": "900",
      "crontab": "",
      "once": false,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "{\"name\":\"Jardova pracovna\", \"password\":\"Avargagloria1\"}",
      "payloadType": "json",
      "x": 210,
      "y": 440,
      "wires": [
          [
              "8b2176ea83498143"
          ]
      ]
  },
  {
      "id": "8b2176ea83498143",
      "type": "http request",
      "z": "19b9be357f301b73",
      "name": "getToken()",
      "method": "POST",
      "ret": "obj",
      "paytoqs": "ignore",
      "url": "https://vpsli4228.a24vps.com/uuiot/auth/gateway-signin",
      "tls": "",
      "persist": false,
      "proxy": "",
      "authType": "",
      "senderr": false,
      "x": 430,
      "y": 440,
      "wires": [
          [
              "39e1f1a93c0bdf6d"
          ]
      ]
  },
  {
      "id": "83f0ca2bda271389",
      "type": "file",
      "z": "19b9be357f301b73",
      "name": "setError()",
      "filename": "weatherstationerrorlogs.txt",
      "appendNewline": true,
      "createDir": false,
      "overwriteFile": "false",
      "encoding": "none",
      "x": 820,
      "y": 480,
      "wires": [
          []
      ]
  },
  {
      "id": "7ce89292beef687f",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "Tries to send first 500 documents of Humidity & Temperature to the server every 15 minutes",
      "info": "For each there is a collection",
      "x": 400,
      "y": 400,
      "wires": []
  },
  {
      "id": "2a59f410fa17440e",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "getReady500Docs()",
      "func": "let data = [];\nlet counter = 0;\nmsg.payload.forEach((doc,i)=>{\n    if(counter<500){\n        if(!doc.wasSent){\n            data.push(doc);\n            counter++;\n        }\n    }\n})\n\nmsg.headers = {\n    Authorization: \"Bearer \"+flow.get(\"gateway_access_token\")\n}\n//This goes to the server\nmsg.payload = data;\n//This are the original values - they are getting ready for update\nmsg.original = data;\n\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 1390,
      "y": 420,
      "wires": [
          [
              "633b3e465284dfed"
          ]
      ]
  },
  {
      "id": "ea306ee0e53dd456",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "setTokenToGlobal()",
      "func": "flow.set(\"gateway_access_token\", msg.payload.gateway_access_token);\n\nconst date = new Date().toLocaleDateString(\"cs-CZ\")+\" \"+ new Date().toLocaleTimeString(\"cs-CZ\");\nflow.set(\"last_success\", date);\nmsg.payload = {}\nreturn msg;\n",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 830,
      "y": 420,
      "wires": [
          [
              "a9d4b6bf323d6e95",
              "aad56712a8560dfd"
          ]
      ]
  },
  {
      "id": "39e1f1a93c0bdf6d",
      "type": "switch",
      "z": "19b9be357f301b73",
      "name": "catchError()",
      "property": "payload.gateway_access_token",
      "propertyType": "msg",
      "rules": [
          {
              "t": "nnull"
          },
          {
              "t": "null"
          }
      ],
      "checkall": "true",
      "repair": true,
      "outputs": 2,
      "x": 610,
      "y": 440,
      "wires": [
          [
              "ea306ee0e53dd456"
          ],
          [
              "83f0ca2bda271389"
          ]
      ]
  },
  {
      "id": "633b3e465284dfed",
      "type": "http request",
      "z": "19b9be357f301b73",
      "name": "sendDocsToCloud()",
      "method": "POST",
      "ret": "obj",
      "paytoqs": "ignore",
      "url": "https://vpsli4228.a24vps.com/uuiot/gateway/save/humidity",
      "tls": "",
      "persist": false,
      "proxy": "",
      "authType": "",
      "senderr": false,
      "x": 1610,
      "y": 420,
      "wires": [
          [
              "6011d9c3e912ce20"
          ]
      ]
  },
  {
      "id": "6011d9c3e912ce20",
      "type": "switch",
      "z": "19b9be357f301b73",
      "name": "catchError()",
      "property": "payload.status",
      "propertyType": "msg",
      "rules": [
          {
              "t": "null"
          },
          {
              "t": "eq",
              "v": "500",
              "vt": "str"
          }
      ],
      "checkall": "true",
      "repair": false,
      "outputs": 2,
      "x": 1790,
      "y": 420,
      "wires": [
          [
              "839a4d99e87d3da6"
          ],
          [
              "bb74912291cd8c3f"
          ]
      ]
  },
  {
      "id": "bb74912291cd8c3f",
      "type": "file",
      "z": "19b9be357f301b73",
      "name": "Log the error",
      "filename": "weatherstationerrorlogs.txt",
      "appendNewline": true,
      "createDir": false,
      "overwriteFile": "false",
      "encoding": "none",
      "x": 1990,
      "y": 500,
      "wires": [
          [
              "a0cbf4f9d9339a23"
          ]
      ]
  },
  {
      "id": "839a4d99e87d3da6",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "prepareDataForLocalMongoUpdate()",
      "func": "let ObjectId = mongodb.ObjectId;\nconst arrayToBeUpdated = msg.original.map((m,i)=>{\n    return ObjectId(m._id)\n})\nmsg.query = { \"_id\": { \"$in\": arrayToBeUpdated} };\nmsg.payload = {\"$set\":{\"wasSent\":true}};\nreturn msg;\n\n\n\n\n\n",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [
          {
              "var": "mongodb",
              "module": "mongodb"
          }
      ],
      "x": 2050,
      "y": 320,
      "wires": [
          [
              "9f38062eadc4e548"
          ]
      ]
  },
  {
      "id": "a0cbf4f9d9339a23",
      "type": "debug",
      "z": "19b9be357f301b73",
      "name": "",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "false",
      "statusVal": "",
      "statusType": "auto",
      "x": 2170,
      "y": 500,
      "wires": []
  },
  {
      "id": "a9d4b6bf323d6e95",
      "type": "mongodb in",
      "z": "19b9be357f301b73",
      "mongodb": "f52c314bfd15e0fc",
      "name": "getHumidityFromLocalMongo()",
      "collection": "humidity",
      "operation": "find",
      "x": 1130,
      "y": 420,
      "wires": [
          [
              "2a59f410fa17440e"
          ]
      ]
  },
  {
      "id": "9f38062eadc4e548",
      "type": "mongodb out",
      "z": "19b9be357f301b73",
      "mongodb": "f52c314bfd15e0fc",
      "name": "Update all Docs",
      "collection": "humidity",
      "payonly": false,
      "upsert": false,
      "multi": true,
      "operation": "update",
      "x": 2380,
      "y": 320,
      "wires": []
  },
  {
      "id": "42a9755b0868fa0b",
      "type": "mongodb out",
      "z": "19b9be357f301b73",
      "mongodb": "f52c314bfd15e0fc",
      "name": "saveHumidityToMongo()",
      "collection": "humidity",
      "payonly": true,
      "upsert": false,
      "multi": false,
      "operation": "store",
      "x": 590,
      "y": 280,
      "wires": []
  },
  {
      "id": "aae2a57e2b7202a2",
      "type": "mongodb out",
      "z": "19b9be357f301b73",
      "mongodb": "f52c314bfd15e0fc",
      "name": "saveTemperatureToMongo()",
      "collection": "temperature",
      "payonly": true,
      "upsert": false,
      "multi": false,
      "operation": "store",
      "x": 600,
      "y": 220,
      "wires": []
  },
  {
      "id": "289387c96de027b5",
      "type": "inject",
      "z": "19b9be357f301b73",
      "name": "",
      "props": [
          {
              "p": "payload"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": false,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "[]",
      "payloadType": "json",
      "x": 110,
      "y": 2740,
      "wires": [
          [
              "3c57df8ded7c92dd"
          ]
      ]
  },
  {
      "id": "3c57df8ded7c92dd",
      "type": "mongodb4",
      "z": "19b9be357f301b73",
      "clientNode": "5e1c14f38121ceb0",
      "collection": "humidity",
      "operation": "find",
      "output": "toArray",
      "name": "getHumidityValuesFromDb()",
      "x": 300,
      "y": 2740,
      "wires": [
          [
              "e82088631953d445"
          ]
      ]
  },
  {
      "id": "19e40d56567dceb8",
      "type": "mongodb out",
      "z": "19b9be357f301b73",
      "mongodb": "f52c314bfd15e0fc",
      "name": "Update documents",
      "collection": "humidity",
      "payonly": false,
      "upsert": false,
      "multi": true,
      "operation": "update",
      "x": 850,
      "y": 2740,
      "wires": []
  },
  {
      "id": "e82088631953d445",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "prepareDataForLocalMongoUpdate()",
      "func": "let ObjectId = mongodb.ObjectId;\nconst arrayToBeUpdated = msg.payload.map((m,i)=>{\n    return ObjectId(m._id)\n})\n\nmsg.query = { \"_id\": { \"$in\": arrayToBeUpdated} };\nmsg.payload = {\"$set\":{\"wasSent\":false}};\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [
          {
              "var": "mongodb",
              "module": "mongodb"
          }
      ],
      "x": 590,
      "y": 2740,
      "wires": [
          [
              "19e40d56567dceb8"
          ]
      ]
  },
  {
      "id": "5d59b3f6aac0629d",
      "type": "inject",
      "z": "19b9be357f301b73",
      "name": "trigger:getHumidity()",
      "props": [
          {
              "p": "payload"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": false,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "[]",
      "payloadType": "json",
      "x": 150,
      "y": 2340,
      "wires": [
          [
              "ed444beb57e5a19d"
          ]
      ]
  },
  {
      "id": "ed444beb57e5a19d",
      "type": "mongodb4",
      "z": "19b9be357f301b73",
      "clientNode": "5e1c14f38121ceb0",
      "collection": "humidity",
      "operation": "find",
      "output": "toArray",
      "name": "getHumidityValuesFromDb()",
      "x": 420,
      "y": 2340,
      "wires": [
          [
              "612e43e6c0593124"
          ]
      ]
  },
  {
      "id": "612e43e6c0593124",
      "type": "debug",
      "z": "19b9be357f301b73",
      "name": "",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "false",
      "statusVal": "",
      "statusType": "auto",
      "x": 650,
      "y": 2340,
      "wires": []
  },
  {
      "id": "38b0d4a443d3a163",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "TESTING SUB_FLOWS",
      "info": "For each there is a collection",
      "x": 140,
      "y": 2200,
      "wires": []
  },
  {
      "id": "c718ccba90c39f2e",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "Reverts \"wasSent\" back to false for all objects!",
      "info": "For each there is a collection",
      "x": 220,
      "y": 2700,
      "wires": [],
      "icon": "node-red/alert.svg"
  },
  {
      "id": "d61879c53b112613",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "Gets all Humidity values",
      "info": "For each there is a collection",
      "x": 150,
      "y": 2300,
      "wires": []
  },
  {
      "id": "aad56712a8560dfd",
      "type": "mongodb in",
      "z": "19b9be357f301b73",
      "mongodb": "f52c314bfd15e0fc",
      "name": "getTemperatureFromLocalMongo()",
      "collection": "temperature",
      "operation": "find",
      "x": 1140,
      "y": 500,
      "wires": [
          [
              "6ac1b91e03d95aec"
          ]
      ]
  },
  {
      "id": "6ac1b91e03d95aec",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "getReady500Docs()",
      "func": "let data = [];\nlet counter = 0;\nmsg.payload.forEach((doc,i)=>{\n    if(counter<500){\n        if(!doc.wasSent){\n            data.push(doc);\n            counter++;\n        }\n    }\n})\n\nmsg.headers = {\n    Authorization: \"Bearer \"+flow.get(\"gateway_access_token\")\n}\n//This goes to the server\nmsg.payload = data;\n//This are the original values - they are getting ready for update\nmsg.original = data;\n\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 1390,
      "y": 500,
      "wires": [
          [
              "fef1a9ad580777b8"
          ]
      ]
  },
  {
      "id": "fef1a9ad580777b8",
      "type": "http request",
      "z": "19b9be357f301b73",
      "name": "sendDocsToCloud()",
      "method": "POST",
      "ret": "obj",
      "paytoqs": "ignore",
      "url": "https://vpsli4228.a24vps.com/uuiot/gateway/save/temperature",
      "tls": "",
      "persist": false,
      "proxy": "",
      "authType": "",
      "senderr": false,
      "x": 1610,
      "y": 500,
      "wires": [
          [
              "e58094b5220d2a85"
          ]
      ]
  },
  {
      "id": "e58094b5220d2a85",
      "type": "switch",
      "z": "19b9be357f301b73",
      "name": "catchError()",
      "property": "payload.status",
      "propertyType": "msg",
      "rules": [
          {
              "t": "null"
          },
          {
              "t": "eq",
              "v": "500",
              "vt": "str"
          }
      ],
      "checkall": "true",
      "repair": false,
      "outputs": 2,
      "x": 1810,
      "y": 720,
      "wires": [
          [
              "d3e5501dd52ef1d7"
          ],
          [
              "b6c3b52408d62535"
          ]
      ]
  },
  {
      "id": "b6c3b52408d62535",
      "type": "file",
      "z": "19b9be357f301b73",
      "name": "Log the error",
      "filename": "weatherstationerrorlogs.txt",
      "appendNewline": true,
      "createDir": false,
      "overwriteFile": "false",
      "encoding": "none",
      "x": 1950,
      "y": 800,
      "wires": [
          [
              "cf7c8671174b48da"
          ]
      ]
  },
  {
      "id": "cf7c8671174b48da",
      "type": "debug",
      "z": "19b9be357f301b73",
      "name": "",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "false",
      "statusVal": "",
      "statusType": "auto",
      "x": 2130,
      "y": 800,
      "wires": []
  },
  {
      "id": "d3e5501dd52ef1d7",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "prepareDataForLocalMongoUpdate()",
      "func": "let ObjectId = mongodb.ObjectId;\nconst arrayToBeUpdated = msg.original.map((m,i)=>{\n    return ObjectId(m._id)\n})\nmsg.query = { \"_id\": { \"$in\": arrayToBeUpdated} };\nmsg.payload = {\"$set\":{\"wasSent\":true}};\nreturn msg;\n\n\n\n\n\n",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [
          {
              "var": "mongodb",
              "module": "mongodb"
          }
      ],
      "x": 2050,
      "y": 640,
      "wires": [
          [
              "029a0ec2d1a885e8"
          ]
      ]
  },
  {
      "id": "029a0ec2d1a885e8",
      "type": "mongodb out",
      "z": "19b9be357f301b73",
      "mongodb": "f52c314bfd15e0fc",
      "name": "Update all Docs",
      "collection": "temperature",
      "payonly": false,
      "upsert": false,
      "multi": true,
      "operation": "update",
      "x": 2380,
      "y": 640,
      "wires": []
  },
  {
      "id": "a67b93e8f2a8c60b",
      "type": "inject",
      "z": "19b9be357f301b73",
      "name": "trigger:getTemperature",
      "props": [
          {
              "p": "payload"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": false,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "[]",
      "payloadType": "json",
      "x": 160,
      "y": 2440,
      "wires": [
          [
              "43f12d7250f79d87"
          ]
      ]
  },
  {
      "id": "43f12d7250f79d87",
      "type": "mongodb4",
      "z": "19b9be357f301b73",
      "clientNode": "5e1c14f38121ceb0",
      "collection": "temperature",
      "operation": "find",
      "output": "toArray",
      "name": "getTemperatureValuesFromDb()",
      "x": 430,
      "y": 2440,
      "wires": [
          [
              "820f655b301d68a2"
          ]
      ]
  },
  {
      "id": "820f655b301d68a2",
      "type": "debug",
      "z": "19b9be357f301b73",
      "name": "",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "false",
      "statusVal": "",
      "statusType": "auto",
      "x": 650,
      "y": 2440,
      "wires": []
  },
  {
      "id": "f796e441a77e4308",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "Gets all Temperature values",
      "info": "For each there is a collection",
      "x": 160,
      "y": 2400,
      "wires": []
  },
  {
      "id": "f5f943450a3064b1",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "TESTING SUB_FLOWS",
      "info": "For each there is a collection",
      "x": 340,
      "y": 2200,
      "wires": []
  },
  {
      "id": "d20bf3ab706a85e2",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "TESTING SUB_FLOWS",
      "info": "For each there is a collection",
      "x": 540,
      "y": 2200,
      "wires": []
  },
  {
      "id": "2da18b37bf41ba81",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "TESTING SUB_FLOWS",
      "info": "For each there is a collection",
      "x": 740,
      "y": 2200,
      "wires": []
  },
  {
      "id": "c8a3a268c1a75bc6",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "TESTING SUB_FLOWS",
      "info": "For each there is a collection",
      "x": 940,
      "y": 2200,
      "wires": []
  },
  {
      "id": "db947d7f7871a861",
      "type": "inject",
      "z": "19b9be357f301b73",
      "name": "humidityTemperatureDelete: Trigger",
      "props": [
          {
              "p": "payload"
          }
      ],
      "repeat": "43200",
      "crontab": "",
      "once": false,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "\"\"",
      "payloadType": "str",
      "x": 250,
      "y": 1000,
      "wires": [
          [
              "fc0a8ea6e449061b"
          ]
      ]
  },
  {
      "id": "fc0a8ea6e449061b",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "QUERY: WasSent() = true",
      "func": "msg.payload = {\"wasSent\":true}\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 550,
      "y": 1000,
      "wires": [
          [
              "69a16f51cd61f3a2",
              "bb982baee53485e9"
          ]
      ]
  },
  {
      "id": "69a16f51cd61f3a2",
      "type": "mongodb in",
      "z": "19b9be357f301b73",
      "mongodb": "f52c314bfd15e0fc",
      "name": "findHumidity(): wasSent:true",
      "collection": "humidity",
      "operation": "find",
      "x": 860,
      "y": 960,
      "wires": [
          [
              "7f8290e078d82aa9"
          ]
      ]
  },
  {
      "id": "bb982baee53485e9",
      "type": "mongodb in",
      "z": "19b9be357f301b73",
      "mongodb": "f52c314bfd15e0fc",
      "name": "findTemperature(): wasSent:true",
      "collection": "temperature",
      "operation": "find",
      "x": 850,
      "y": 1060,
      "wires": [
          [
              "8587fadc07e67ef1"
          ]
      ]
  },
  {
      "id": "6a52e3d34be53c3b",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "Deletes humidity/temperature documents if they have property wasSent:true - once in 12h",
      "info": "For each there is a collection",
      "x": 390,
      "y": 960,
      "wires": []
  },
  {
      "id": "7f8290e078d82aa9",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "prepareDataForLocalMongoDelete()",
      "func": "let ObjectId = mongodb.ObjectId;\nconst arrayToBeUpdated = msg.payload.map((m,i)=>{\n    return ObjectId(m._id)\n})\nmsg.payload = { \"_id\": { \"$in\": arrayToBeUpdated} };\nreturn msg;\n\n\n\n\n\n",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [
          {
              "var": "mongodb",
              "module": "mongodb"
          }
      ],
      "x": 1170,
      "y": 960,
      "wires": [
          [
              "d326dfb1bfd16856"
          ]
      ]
  },
  {
      "id": "8587fadc07e67ef1",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "prepareDataForLocalMongoDelete()",
      "func": "let ObjectId = mongodb.ObjectId;\nconst arrayToBeUpdated = msg.payload.map((m,i)=>{\n    return ObjectId(m._id)\n})\nmsg.payload = { \"_id\": { \"$in\": arrayToBeUpdated} };\n\nreturn msg;\n\n\n\n\n\n",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [
          {
              "var": "mongodb",
              "module": "mongodb"
          }
      ],
      "x": 1170,
      "y": 1060,
      "wires": [
          [
              "f31fdc13250c1d44"
          ]
      ]
  },
  {
      "id": "d326dfb1bfd16856",
      "type": "mongodb out",
      "z": "19b9be357f301b73",
      "mongodb": "f52c314bfd15e0fc",
      "name": "Remove humidity where wasSent:true",
      "collection": "humidity",
      "payonly": false,
      "upsert": false,
      "multi": true,
      "operation": "delete",
      "x": 1530,
      "y": 960,
      "wires": []
  },
  {
      "id": "f31fdc13250c1d44",
      "type": "mongodb out",
      "z": "19b9be357f301b73",
      "mongodb": "f52c314bfd15e0fc",
      "name": "Remove temperature where wasSent:true",
      "collection": "temperature",
      "payonly": false,
      "upsert": false,
      "multi": true,
      "operation": "delete",
      "x": 1540,
      "y": 1060,
      "wires": []
  },
  {
      "id": "6c0f9dd29378abe7",
      "type": "inject",
      "z": "19b9be357f301b73",
      "name": "trigger:getTemperature - where wasSent:false",
      "props": [
          {
              "p": "payload"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": false,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "{\"wasSent\":false}",
      "payloadType": "json",
      "x": 230,
      "y": 2540,
      "wires": [
          [
              "bee1b7d7bfce1485"
          ]
      ]
  },
  {
      "id": "bee1b7d7bfce1485",
      "type": "mongodb in",
      "z": "19b9be357f301b73",
      "mongodb": "f52c314bfd15e0fc",
      "name": "findTemperature();wasSent:false",
      "collection": "temperature",
      "operation": "find",
      "x": 570,
      "y": 2540,
      "wires": [
          [
              "11afdc0e6fe5d5dd"
          ]
      ]
  },
  {
      "id": "11afdc0e6fe5d5dd",
      "type": "debug",
      "z": "19b9be357f301b73",
      "name": "",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "false",
      "statusVal": "",
      "statusType": "auto",
      "x": 810,
      "y": 2540,
      "wires": []
  },
  {
      "id": "0e051febe49a6984",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "Finds all temperature values where wasSent is false",
      "info": "For each there is a collection",
      "x": 230,
      "y": 2500,
      "wires": []
  },
  {
      "id": "2ad561a5e29f8908",
      "type": "inject",
      "z": "19b9be357f301b73",
      "name": "trigger:getHumidity - where wasSent:false",
      "props": [
          {
              "p": "payload"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": false,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "{\"wasSent\":false}",
      "payloadType": "json",
      "x": 220,
      "y": 2640,
      "wires": [
          [
              "66d0d76cc08349e4"
          ]
      ]
  },
  {
      "id": "66d0d76cc08349e4",
      "type": "mongodb in",
      "z": "19b9be357f301b73",
      "mongodb": "f52c314bfd15e0fc",
      "name": "findHumidity();wasSent:false",
      "collection": "temperature",
      "operation": "find",
      "x": 560,
      "y": 2640,
      "wires": [
          [
              "f7da96dbe1faf2b7"
          ]
      ]
  },
  {
      "id": "f7da96dbe1faf2b7",
      "type": "debug",
      "z": "19b9be357f301b73",
      "name": "",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "false",
      "statusVal": "",
      "statusType": "auto",
      "x": 810,
      "y": 2640,
      "wires": []
  },
  {
      "id": "0d3950414436da8e",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "Finds all humidity values where wasSent is false",
      "info": "For each there is a collection",
      "x": 220,
      "y": 2600,
      "wires": []
  },
  {
      "id": "3ca073a535b87e3d",
      "type": "comment",
      "z": "19b9be357f301b73",
      "name": "Dashboard components",
      "info": "Dashboard components",
      "x": 130,
      "y": 1200,
      "wires": []
  },
  {
      "id": "068e933c642c4c5a",
      "type": "mongodb4",
      "z": "19b9be357f301b73",
      "clientNode": "5e1c14f38121ceb0",
      "collection": "humidity",
      "operation": "find",
      "output": "toArray",
      "name": "getHumidityValuesFromDb()",
      "x": 320,
      "y": 1380,
      "wires": [
          [
              "528a117f984ea0cb",
              "e3240143f333166e",
              "7a4f36b6764d421e"
          ]
      ]
  },
  {
      "id": "ac15a04a53adef59",
      "type": "inject",
      "z": "19b9be357f301b73",
      "name": "",
      "props": [
          {
              "p": "payload"
          }
      ],
      "repeat": "10",
      "crontab": "",
      "once": false,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "[]",
      "payloadType": "jsonata",
      "x": 90,
      "y": 1380,
      "wires": [
          [
              "068e933c642c4c5a",
              "10f3b6f491c84977"
          ]
      ]
  },
  {
      "id": "528a117f984ea0cb",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "getHumidityLength()",
      "func": "const length = msg.payload.length;\nmsg.payload = length;\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 560,
      "y": 1280,
      "wires": [
          [
              "1e37b38dfa43a17c"
          ]
      ]
  },
  {
      "id": "1e37b38dfa43a17c",
      "type": "ui_text",
      "z": "19b9be357f301b73",
      "group": "41c66548fc70995d",
      "order": 0,
      "width": 0,
      "height": 0,
      "name": "",
      "label": "Celkový počet záznamů VLHKOSTI v lokální DB",
      "format": "{{msg.payload}}",
      "layout": "row-spread",
      "className": "",
      "x": 940,
      "y": 1280,
      "wires": []
  },
  {
      "id": "10f3b6f491c84977",
      "type": "mongodb4",
      "z": "19b9be357f301b73",
      "clientNode": "5e1c14f38121ceb0",
      "collection": "temperature",
      "operation": "find",
      "output": "toArray",
      "name": "getTemperatureValuesFromDb()",
      "x": 330,
      "y": 1460,
      "wires": [
          [
              "21e2d03c25f43199",
              "704370920c30557e",
              "dc3d1ce46cd232ea"
          ]
      ]
  },
  {
      "id": "21e2d03c25f43199",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "getTemperatureLength()",
      "func": "const length = msg.payload.length;\nmsg.payload = length;\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 590,
      "y": 1460,
      "wires": [
          [
              "12dc3cf7ca4f25ee"
          ]
      ]
  },
  {
      "id": "12dc3cf7ca4f25ee",
      "type": "ui_text",
      "z": "19b9be357f301b73",
      "group": "41c66548fc70995d",
      "order": 0,
      "width": 0,
      "height": 0,
      "name": "",
      "label": "Celkový počet záznamů TEPLOTY v lokální DB",
      "format": "{{msg.payload}}",
      "layout": "row-spread",
      "className": "",
      "x": 900,
      "y": 1460,
      "wires": []
  },
  {
      "id": "e3240143f333166e",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "getHumidityWasSentTrueLength()",
      "func": "const wasSentTrue = msg.payload.filter((o)=>(o.wasSent === true))\nmsg.payload = wasSentTrue.length;\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 600,
      "y": 1320,
      "wires": [
          [
              "a6f801d3a1d1eef0"
          ]
      ]
  },
  {
      "id": "a6f801d3a1d1eef0",
      "type": "ui_text",
      "z": "19b9be357f301b73",
      "group": "41c66548fc70995d",
      "order": 0,
      "width": 0,
      "height": 0,
      "name": "",
      "label": "Počet záznamů VLHKOSTI , které již byly odeslány na cloud",
      "format": "{{msg.payload}}",
      "layout": "row-spread",
      "className": "",
      "x": 980,
      "y": 1320,
      "wires": []
  },
  {
      "id": "7a4f36b6764d421e",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "getHumidityWasSentFalseLength()",
      "func": "const wasSentTrue = msg.payload.filter((o)=>{return o.wasSent === false})\nmsg.payload = wasSentTrue.length;\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 600,
      "y": 1360,
      "wires": [
          [
              "caf5311b1918f996"
          ]
      ]
  },
  {
      "id": "caf5311b1918f996",
      "type": "ui_text",
      "z": "19b9be357f301b73",
      "group": "41c66548fc70995d",
      "order": 0,
      "width": 0,
      "height": 0,
      "name": "",
      "label": "Počet záznamů VLHKOSTI , které ještě nebyly odeslány na cloud!",
      "format": "{{msg.payload}}",
      "layout": "row-spread",
      "className": "",
      "x": 1000,
      "y": 1360,
      "wires": []
  },
  {
      "id": "704370920c30557e",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "getHumidityWasSentTrueLength()",
      "func": "const wasSentTrue = msg.payload.filter((o)=>(o.wasSent === true))\nmsg.payload = wasSentTrue.length;\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 620,
      "y": 1500,
      "wires": [
          [
              "455dfd02817c2b06"
          ]
      ]
  },
  {
      "id": "455dfd02817c2b06",
      "type": "ui_text",
      "z": "19b9be357f301b73",
      "group": "41c66548fc70995d",
      "order": 0,
      "width": 0,
      "height": 0,
      "name": "",
      "label": "Počet záznamů TEPLOTY , které již byly odeslány na cloud",
      "format": "{{msg.payload}}",
      "layout": "row-spread",
      "className": "",
      "x": 1000,
      "y": 1500,
      "wires": []
  },
  {
      "id": "dc3d1ce46cd232ea",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "getHumidityWasSentFalseLength()",
      "func": "const wasSentTrue = msg.payload.filter((o)=>{return o.wasSent === false})\nmsg.payload = wasSentTrue.length;\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 620,
      "y": 1540,
      "wires": [
          [
              "fb46be5cbbf174cc"
          ]
      ]
  },
  {
      "id": "fb46be5cbbf174cc",
      "type": "ui_text",
      "z": "19b9be357f301b73",
      "group": "41c66548fc70995d",
      "order": 0,
      "width": 0,
      "height": 0,
      "name": "",
      "label": "Počet záznamů TEPLOTY, které ještě nebyly odeslány na cloud!",
      "format": "{{msg.payload}}",
      "layout": "row-spread",
      "className": "",
      "x": 1010,
      "y": 1540,
      "wires": []
  },
  {
      "id": "ab83d796b169752a",
      "type": "inject",
      "z": "19b9be357f301b73",
      "name": "",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "vt": "str"
          }
      ],
      "repeat": "60",
      "crontab": "",
      "once": false,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "[]",
      "payloadType": "jsonata",
      "x": 90,
      "y": 1680,
      "wires": [
          [
              "d221b9ae59036ac2",
              "edee3d20fdd36a92",
              "d7e4b49e9eaafdee"
          ]
      ]
  },
  {
      "id": "d221b9ae59036ac2",
      "type": "mongodb4",
      "z": "19b9be357f301b73",
      "clientNode": "5e1c14f38121ceb0",
      "collection": "humidity",
      "operation": "find",
      "output": "toArray",
      "name": "getHumidityValuesFromDb()",
      "x": 320,
      "y": 1680,
      "wires": [
          [
              "3276e875b72f72ed"
          ]
      ]
  },
  {
      "id": "3276e875b72f72ed",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "getLastHumidityValue()",
      "func": "const lastValue = msg.payload[msg.payload.length - 1].humidity;\nmsg.payload = lastValue;\nmsg.topic = \"Humidity\";\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 610,
      "y": 1680,
      "wires": [
          [
              "a1181b1f62dc1a88"
          ]
      ]
  },
  {
      "id": "a1181b1f62dc1a88",
      "type": "ui_chart",
      "z": "19b9be357f301b73",
      "name": "",
      "group": "41c66548fc70995d",
      "order": 6,
      "width": 0,
      "height": 0,
      "label": "Humidity - vlhkost",
      "chartType": "line",
      "legend": "false",
      "xformat": "HH:mm:ss",
      "interpolate": "linear",
      "nodata": "",
      "dot": false,
      "ymin": "",
      "ymax": "",
      "removeOlder": 1,
      "removeOlderPoints": "",
      "removeOlderUnit": "3600",
      "cutout": 0,
      "useOneColor": false,
      "useUTC": false,
      "colors": [
          "#1f77b4",
          "#aec7e8",
          "#ff7f0e",
          "#2ca02c",
          "#98df8a",
          "#d62728",
          "#ff9896",
          "#9467bd",
          "#c5b0d5"
      ],
      "outputs": 1,
      "useDifferentColor": false,
      "className": "",
      "x": 870,
      "y": 1680,
      "wires": [
          []
      ]
  },
  {
      "id": "edee3d20fdd36a92",
      "type": "mongodb4",
      "z": "19b9be357f301b73",
      "clientNode": "5e1c14f38121ceb0",
      "collection": "temperature",
      "operation": "find",
      "output": "toArray",
      "name": "getTemperatureValuesFromDb()",
      "x": 330,
      "y": 1760,
      "wires": [
          [
              "8447e9f5e0ca19ab"
          ]
      ]
  },
  {
      "id": "8447e9f5e0ca19ab",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "getLastTemperatureValue()",
      "func": "const lastValue = msg.payload[msg.payload.length - 1].temperature;\nmsg.payload = lastValue;\nmsg.topic = \"Temperature\";\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 640,
      "y": 1760,
      "wires": [
          [
              "5da2a0cdd3bd829f"
          ]
      ]
  },
  {
      "id": "5da2a0cdd3bd829f",
      "type": "ui_chart",
      "z": "19b9be357f301b73",
      "name": "",
      "group": "41c66548fc70995d",
      "order": 6,
      "width": 0,
      "height": 0,
      "label": "Temperature - Teplota",
      "chartType": "line",
      "legend": "false",
      "xformat": "HH:mm:ss",
      "interpolate": "linear",
      "nodata": "",
      "dot": false,
      "ymin": "",
      "ymax": "",
      "removeOlder": 1,
      "removeOlderPoints": "",
      "removeOlderUnit": "3600",
      "cutout": 0,
      "useOneColor": false,
      "useUTC": false,
      "colors": [
          "#1f77b4",
          "#aec7e8",
          "#ff7f0e",
          "#2ca02c",
          "#98df8a",
          "#d62728",
          "#ff9896",
          "#9467bd",
          "#c5b0d5"
      ],
      "outputs": 1,
      "useDifferentColor": false,
      "className": "",
      "x": 900,
      "y": 1760,
      "wires": [
          []
      ]
  },
  {
      "id": "90357f6674c70370",
      "type": "ui_text",
      "z": "19b9be357f301b73",
      "group": "41c66548fc70995d",
      "order": 8,
      "width": 0,
      "height": 0,
      "name": "",
      "label": "Naposledy odeslaná data",
      "format": "{{msg.payload}}",
      "layout": "row-spread",
      "className": "",
      "x": 590,
      "y": 1860,
      "wires": []
  },
  {
      "id": "d7e4b49e9eaafdee",
      "type": "function",
      "z": "19b9be357f301b73",
      "name": "getLastSentDate()",
      "func": "msg.payload = flow.get(\"last_success\");\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 290,
      "y": 1860,
      "wires": [
          [
              "90357f6674c70370"
          ]
      ]
  },
  {
      "id": "627510a29e1feb98",
      "type": "serial-port",
      "serialport": "/dev/ttyACM0",
      "serialbaud": "9600",
      "databits": "8",
      "parity": "none",
      "stopbits": "1",
      "waitfor": "",
      "dtr": "none",
      "rts": "none",
      "cts": "none",
      "dsr": "none",
      "newline": "\\n",
      "bin": "false",
      "out": "char",
      "addchar": "",
      "responsetimeout": "10000"
  },
  {
      "id": "f52c314bfd15e0fc",
      "type": "mongodb",
      "hostname": "127.0.0.1",
      "port": "27017",
      "db": "admin",
      "name": "Local Db"
  },
  {
      "id": "5e1c14f38121ceb0",
      "type": "mongodb4-client",
      "name": "Local Server",
      "protocol": "mongodb",
      "hostname": "localhost",
      "port": "27017",
      "dbName": "admin",
      "authSource": "",
      "authMechanism": "DEFAULT",
      "tls": false,
      "tlsCAFile": "",
      "tlsInsecure": false,
      "uri": "",
      "advanced": "",
      "uriTabActive": "tab-uri-simple"
  },
  {
      "id": "41c66548fc70995d",
      "type": "ui_group",
      "name": "uuIOT - Měření teploty a vlhkosti",
      "tab": "199fecdc0cae80d2",
      "order": 1,
      "disp": true,
      "width": "12",
      "collapse": false,
      "className": ""
  },
  {
      "id": "199fecdc0cae80d2",
      "type": "ui_tab",
      "name": "Home",
      "icon": "dashboard",
      "disabled": false,
      "hidden": false
  }
]